{"version":3,"file":"Badge.stories-TfHW6GuI.js","sources":["../../src/1.11.0/dsfr/components/badge/component/js/badge-types.js","../../src/1.11.0/dsfr/components/badge/component/js/badge-sizes.js","../../src/1.11.0/dsfr/components/badge/component/js/badge.js"],"sourcesContent":["export const BadgeTypes = {\n  INFO: 'info',\n  WARNING: 'warning',\n  ERROR: 'error',\n  SUCCESS: 'success',\n  NEW: 'new'\n};\n","export const BadgeSizes = {\n  SMALL: 'sm',\n  MEDIUM: 'md',\n};\n","import { Basis } from '../../../basis';\nimport { BadgeTypes } from './badge-types';\nimport { BadgeSizes } from './badge-sizes';\n\nclass Badge extends Basis {\n  constructor (data = {\n    id : 'badge',\n    classes : [],\n    attributes : {},\n    label: 'libell√©',\n    type: null,\n    size: null,\n    accent: null,\n    markup: null,\n    noIcon: false,\n    icon: null,\n    hasEllipsis: false,\n  }) {\n    super(data);\n    this._label = data.label;\n    this.type = data.type;\n    this.size = data.size;\n    this._accent = data.accent;\n    this._markup = data.markup || 'p';\n    this._noIcon = data.noIcon;\n    this._icon = data.icon;\n    this._hasEllipsis = data.hasEllipsis;\n  }\n\n  get label () {\n    return this._label;\n  }\n\n  set label (value) {\n    this._label = value;\n  }\n\n  get type () {\n    return this._type;\n  }\n\n  set type (value) {\n    if (!Object.values(BadgeTypes).includes(value)) return;\n    this._type = value;\n  }\n\n  set size (value) {\n    if (!Object.values(BadgeSizes).includes(value)) return;\n    this._size = value;\n  }\n\n  get size () {\n    return this._size;\n  }\n\n  get classes () {\n    const classes = [\n      'fr-badge',\n      ... super.classes\n    ];\n\n    if (this._type) classes.push(`fr-badge--${this._type}`);\n    if (this._size && this._size !== BadgeSizes.MEDIUM) classes.push(`fr-badge--${this._size}`);\n    if (this._accent) classes.push(`fr-badge--${this._accent}`);\n    if (this._noIcon) classes.push('fr-badge--no-icon');\n    if (this._icon) classes.push(`fr-icon-${this._icon}`);\n\n    return classes;\n  }\n\n  get html () {\n    const content = this._hasEllipsis ? `<span class=\"fr-badge__ellipsis\">${this._label}</span>` : this._label;\n    return `<${this._markup} ${this.includeClasses()} ${this.includeAttributes()}>${content}</${this._markup}>`;\n  }\n\n}\n\nexport { Badge };\n"],"names":["BadgeTypes","BadgeSizes","Badge","Basis","data","value","classes","content"],"mappings":"mEAAO,MAAMA,EAAa,CACxB,KAAM,OACN,QAAS,UACT,MAAO,QACP,QAAS,UACT,IAAK,KACP,ECNaC,EAAa,CACxB,MAAO,KACP,OAAQ,IACV,ECCA,MAAMC,UAAcC,CAAM,CACxB,YAAaC,EAAO,CAClB,GAAK,QACL,QAAU,CAAE,EACZ,WAAa,CAAE,EACf,MAAO,UACP,KAAM,KACN,KAAM,KACN,OAAQ,KACR,OAAQ,KACR,OAAQ,GACR,KAAM,KACN,YAAa,EACjB,EAAK,CACD,MAAMA,CAAI,EACV,KAAK,OAASA,EAAK,MACnB,KAAK,KAAOA,EAAK,KACjB,KAAK,KAAOA,EAAK,KACjB,KAAK,QAAUA,EAAK,OACpB,KAAK,QAAUA,EAAK,QAAU,IAC9B,KAAK,QAAUA,EAAK,OACpB,KAAK,MAAQA,EAAK,KAClB,KAAK,aAAeA,EAAK,WAC1B,CAED,IAAI,OAAS,CACX,OAAO,KAAK,MACb,CAED,IAAI,MAAOC,EAAO,CAChB,KAAK,OAASA,CACf,CAED,IAAI,MAAQ,CACV,OAAO,KAAK,KACb,CAED,IAAI,KAAMA,EAAO,CACV,OAAO,OAAOL,CAAU,EAAE,SAASK,CAAK,IAC7C,KAAK,MAAQA,EACd,CAED,IAAI,KAAMA,EAAO,CACV,OAAO,OAAOJ,CAAU,EAAE,SAASI,CAAK,IAC7C,KAAK,MAAQA,EACd,CAED,IAAI,MAAQ,CACV,OAAO,KAAK,KACb,CAED,IAAI,SAAW,CACb,MAAMC,EAAU,CACd,WACA,GAAI,MAAM,OAChB,EAEI,OAAI,KAAK,OAAOA,EAAQ,KAAK,aAAa,KAAK,KAAK,EAAE,EAClD,KAAK,OAAS,KAAK,QAAUL,EAAW,QAAQK,EAAQ,KAAK,aAAa,KAAK,KAAK,EAAE,EACtF,KAAK,SAASA,EAAQ,KAAK,aAAa,KAAK,OAAO,EAAE,EACtD,KAAK,SAASA,EAAQ,KAAK,mBAAmB,EAC9C,KAAK,OAAOA,EAAQ,KAAK,WAAW,KAAK,KAAK,EAAE,EAE7CA,CACR,CAED,IAAI,MAAQ,CACV,MAAMC,EAAU,KAAK,aAAe,oCAAoC,KAAK,MAAM,UAAY,KAAK,OACpG,MAAO,IAAI,KAAK,OAAO,IAAI,KAAK,eAAc,CAAE,IAAI,KAAK,kBAAiB,CAAE,IAAIA,CAAO,KAAK,KAAK,OAAO,GACzG,CAEH;;;;;"}