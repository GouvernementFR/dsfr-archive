name: Build, release and Increment version

on:
  push:
    branches:
      - main

  repository_dispatch:
    types: [ release-trigger ]

  workflow_dispatch:
    inputs:
      type:
        description: 'Type of publication'
        required: true
        default: 'release'
        type: choice
        options:
          - release
          - test

jobs:
  increment-build-release:
    runs-on: ubuntu-latest

    steps:
        # Set environment variables based on the type of publication
      - name: Set up environment variables
        run: |
          echo "type=${{ github.event.inputs.type || github.event.client_payload.type || 'release' }}" >> $GITHUB_ENV
          if [ "${{ env.type }}" == 'release' ]; then
            echo "branch=main" >> $GITHUB_ENV
          else
            echo "branch=${{ env.type }}" >> $GITHUB_ENV
          fi

      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.branch }}

      # Check if a releases exists
      - name: Check for existing releases
        id: check_release
        run: |
          if [ ! -d "releases" ]; then
              echo "Releases directory does not exist or is empty."
              exit 1
          fi

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.14.0'

      # Enable corepack
      - name: Enable corepack
        run: |
          corepack enable
          yarn

      # Build the project
      - name: Build the project
        run: |
          yarn dsfr configure
          yarn dsfr interpret
          yarn dsfr publish

      # Extract the current version from package.json
      - name: Extract current version
        id: extract_version
        run: |
          current_version=$(jq -r '.version' package.json)
          echo "Current version: $current_version"
          echo "version=$current_version" >> $GITHUB_ENV

      # Perform the release using the current version
      - name: Create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "filename=archive-${{ env.version }}.zip" >> $GITHUB_ENV
          mv .doc www
          mv .env env
          zip -r ${{ env.filename }} www env -x "*.DS_Store"
          gh release create ${{ env.version }} ${{ env.filename }}.zip --title "Release ${{ env.version }}" --notes "Automated release for version ${{ env.version }}"

      # Increment the patch version in package.json
      - name: Increment patch version
        run: |
          current_version=$(jq -r '.version' package.json)
          new_version=$(echo $current_version | awk -F. '{print $1"."$2"."$3+1}')
          jq ".version = \"$new_version\"" package.json > package.tmp.json && mv package.tmp.json package.json
          echo "New version: $new_version"
          echo "version=$new_version" >> $GITHUB_ENV

      # Commit the updated package.json
      - name: Commit updated version
        run: |
          git checkout main
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add package.json
          git commit -m "Increment version to ${{ env.version }}"
          git push
