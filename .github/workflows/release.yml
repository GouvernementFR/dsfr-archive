name: Build, release and Increment version

on:
  push:
    branches:
      - main

  repository_dispatch:
    types: [ release-trigger ]

  workflow_dispatch:
    inputs:
      type:
        description: 'Type of publication'
        required: true
        default: 'release'
        type: choice
        options:
          - release
          - test

jobs:
  increment-build-release:
    runs-on: ubuntu-latest

    steps:
      # Set environment variables based on the type of publication
      - name: Set up environment variables
        run: |
          echo "TYPE=${{ github.event.inputs.type || github.event.client_payload.type || 'release' }}" >> $GITHUB_ENV
          if [ "${TYPE}" == 'release' ]; then
            echo "BRANCH=main" >> $GITHUB_ENV
          else
            echo "BRANCH=${TYPE}" >> $GITHUB_ENV
          fi
          TIMESTAMP=$(date +"%Y%m%d-%H%M")
          echo "RELEASE=${TIMESTAMP}-${TYPE}" >> $GITHUB_ENV
          echo "FILENAME=archive-${RELEASE}.zip" >> $GITHUB_ENV

      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH }}

      # Check if a releases exists
      - name: Check for existing releases
        id: check_release
        run: |
          if [ ! -d "releases" ]; then
              echo "Releases directory does not exist or is empty."
              exit 1
          fi

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.14.0'

      # Enable corepack
      - name: Enable corepack
        run: |
          corepack enable
          yarn

      # Build the project
      - name: Build the project
        run: |
          yarn dsfr configure
          yarn dsfr interpret
          yarn dsfr publish

      # Perform the release using the current version
      - name: Create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          
          mv .doc www
          mv .env env
          zip -r ${{ env.FILENAME }} www env -x "*.DS_Store"
          gh release create ${{ env.RELEASE }} ${{ env.FILENAME }} --title "Release ${{ env.RELEASE }}" --notes "Automated release created by GitHub Actions"
