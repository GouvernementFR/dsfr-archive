name: Collect and commit latest version

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag'
        required: true

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      # Check if the tag is >= v1.14.0
      - name: Check tag version
        id: check_version
        run: |
          version=${{ inputs.tag }}
          if [ "$(printf '%s\n' "v1.14.0" "$version" | sort -V | head -n1)" != "v1.14.0" ]; then
            echo "Tag is less than v1.14.0. Exiting."
            exit 1
          fi

      # Checkout the dsfr repository
      - name: Checkout dsfr repository
        uses: actions/checkout@v3
        with:
          repository: GouvernementFR/dsfr
          ref: ${{ inputs.tag }}

      # Set up Node.js and Yarn
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.14.0'
          cache: 'yarn'
        continue-on-error: false

      - name: Install dependencies
        run: yarn install
        continue-on-error: false

      # Build the project
      - name: Build the project
        run: yarn archive

      # Set the destination folder as an environment variable
      - name: Set destination folder
        run: |
          echo "DEST=releases/${{ inputs.tag }}" >> $GITHUB_ENV

      # Use the environment variable in subsequent steps
      - name: Copy files to release folder
        run: |
          mkdir -p $DEST
          cp -r src storybook changelog.yml package.json $DEST

      - name: Stash the release folder
        run: |
          git add $DEST
          git stash push -m "Stash release ${{ inputs.tag }}" $DEST

      # Checkout dsfr-archive repository
      - name: Checkout dsfr-archive repository
        uses: actions/checkout@v3
        with:
          repository: GouvernementFR/dsfr-archive
          token: ${{ secrets.GITHUB_TOKEN }}

      # Remove existing release folder if it exists
      - name: Remove existing release folder
        run: |
          rm -rf $DEST

      # Pop the stash to restore the release folder
      - name: Pop the stash
        run: |
          git stash pop

      # Commit and push changes
      - name: Commit and push release
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "DSFR published release ${{ inputs.tag }}"
          git push
